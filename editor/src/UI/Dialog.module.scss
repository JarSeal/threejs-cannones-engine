@import '../sass/variables.scss';
$sidePadding: 4rem;

.dialog {
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0);
  position: absolute;
  top: 0;
  left: 0;
  transition-property: background-color;
  transition-timing-function: ease-in-out;

  .dialogBox {
    width: 96%;
    max-width: 80rem;
    max-height: 96vh;
    min-height: 20rem;
    position: absolute;
    left: 50%;
    top: 50%;
    margin-top: -5rem;
    transform: translate3d(-50%, -50%, 0);
    background-color: $light-grey7;
    opacity: 0;
    transition-property: opacity, margin-top;
    transition-timing-function: ease-in-out;
    color: $mid-grey1;
    padding: 2rem 0 0;
    box-shadow: 0 0.2rem 2rem rgba(0, 0, 0, 0.8);
    border-radius: 0.5rem;
    a,
    :global(.link) {
      color: $mid-grey1;
      &:before,
      &:after {
        border-bottom-color: $mid-grey1;
      }
    }
  }

  .innerScroller {
    width: 100%;
    overflow-y: scroll;
    transform: translateY(-0.2rem);
  }

  .innerBox {
    padding: $sidePadding;
    :global(p:first-child) {
      margin-top: 0;
    }
    :global(.cancelButton),
    :global(.saveButton) {
      border-radius: 0.4rem;
      padding: 0 1.5rem 0.2rem;
      min-width: 10.8rem;
      height: 3.6rem;
      background-color: $mid-grey4;
      color: $light-grey8;
      text-align: center;
      @include heading-font;
      font-size: 1.5rem;
      line-height: 1.9rem;
      letter-spacing: 0.1rem;
      border: 0.1rem solid transparent;
      outline: none;
      cursor: pointer;
      font-weight: 400;
      transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
      box-shadow: $elevated-shadow;
      &:global(.saveButton) {
        background-color: $mid-grey1;
      }
      &:hover {
        background-color: $dark-grey3;
      }
      &:focus {
        border-color: $dark-grey1;
      }
      &:active {
        padding-top: 0.3rem;
        border-color: transparent;
        box-shadow: none;
      }
    }
    :global(.saveButton.confirmButtonDelete) {
      background-color: $error;
      color: $white;
      &:hover {
        background-color: darken($error, 10%);
      }
    }
  }
  &.hasTitle .innerBox {
    padding-top: 0.2rem;
  }

  .mainTitle {
    width: 100%;
    margin: 0;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 10;
    padding: 2rem ($sidePadding + 2rem) 2rem $sidePadding;
    @include heading-font;
    font-size: 2.4rem;
    color: $mid-grey1;
  }

  .closeButton {
    width: 4rem;
    height: 4rem;
    border: 0.1rem solid transparent;
    background-color: $light-grey4;
    transition: background-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    z-index: 20;
    padding: 0.5rem 0 0 0.2rem;
    border-radius: 0 0.5rem;
    box-shadow: inset 4px -4px 10px rgba(0, 0, 0, 0.15);
    &:hover {
      background-color: $mid-grey3;
      box-shadow: inset 4px -4px 10px rgba(0, 0, 0, 0.35);
      path {
        fill: $light-grey7;
      }
    }
    path {
      fill: $mid-grey1;
      transition: fill 0.2s ease-in-out;
    }
    span {
      pointer-events: none;
    }
    &:focus {
      outline: none;
      border: 0.1rem solid $dark-grey1;
    }
    &:active {
      box-shadow: inset 4px -4px 10px rgba(0, 0, 0, 0.5);
      border-color: transparent;
      span {
        transform: translateY(0.2rem);
      }
    }
  }

  &.appear {
    background-color: rgba(0, 0, 0, 0.85);
    .dialogBox {
      opacity: 1;
      margin-top: 0;
    }
  }
}

.dialogLocked {
  button,
  a,
  input,
  textarea,
  select,
  form {
    pointer-events: none;
  }
  .saveButton,
  .cancelButton {
    opacity: 0.7;
  }
}

$formElemGap: 1rem;
:global(.dialog-form) {
  display: flex;
  align-content: space-between;
  column-gap: $formElemGap * 2;
  row-gap: $formElemGap;
  flex-wrap: wrap;
  :global(.form-elem--simple-id .form-elem--text-input) {
    margin: 0;
    max-width: none;
  }
  > {
    :global(.form-elem--simple-id),
    :global(.form-elem--text-input),
    :global(.form-elem--dropdown) {
      max-width: none;
      width: calc(50% - ($formElemGap));
    }
    :global(.form-elem--number-input),
    :global(.form-elem--checkbox) {
      max-width: none;
      width: calc(1 / 6 * 100% - ($formElemGap + 0.7rem));
    }
    :global(.collapsable-panel) {
      > :global(.button) {
        background-color: $light-grey4;
        color: $mid-grey1;
        font-weight: 600;
        &:before,
        &:after {
          background-color: $mid-grey1;
        }
        &:hover {
          background-color: $light-grey2;
        }
      }
    }
  }

  $collapsableContentBackground: $mid-grey3;
  :global(.collapsable-panel__content) {
    background-color: $collapsableContentBackground;
    border-radius: 0 0 0.5rem 0.5rem;
    :global(.inputVector) {
      > span {
        background-color: $collapsableContentBackground;
        color: $dark-grey2;
        font-size: 1.2rem;
      }
      &:before {
        background-color: $mid-grey1;
      }
      :global(.form-elem__fields) {
        column-gap: $formElemGap * 2;
      }
      :global(.form-elem--number-input) {
        max-width: none;
        width: calc(1 / 3 * 100% - ($formElemGap * 1.34));
        input {
          font-size: 1.3rem;
        }
      }
    }
  }
}
:global(.dialog) {
  :global(.buttons) {
    display: flex;
    width: 100%;
    align-items: flex-start;
    justify-content: space-between;
    margin-top: 3.2rem;
  }
}
