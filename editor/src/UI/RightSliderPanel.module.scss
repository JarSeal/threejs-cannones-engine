@import '../sass/variables';

@function buttonPlacement($orderNr) {
  @return ($orderNr - 1) * ($rightPanelButtonGap + $rightPanelButtonHeight) + $rightPanelButtonGap;
}

.uiPanelRight {
  position: fixed;
  top: 0;
  right: 0;
  width: $rightPanelWidth;
  height: 100vh;
  background: $colorPanelBack;
  transition: transform 0.2s ease-in-out;
  transform: translate3d(100%, 0, 0);
  font-size: 1.1rem;
  :global(.panelTogglerButton) {
    width: $rightPanelButtonWidth;
    height: $rightPanelButtonHeight;
    position: absolute;
    right: 100%;
    border-radius: 0.4rem 0 0 0.4rem;
    border: none;
    background: rgba($colorPanelBack, 0.8);
    user-select: none;
    cursor: pointer;
    color: $font-color;
    text-shadow: 0 0 1rem $colorPanelBack;
    outline: none;
    font-size: 1.4rem;
    font-weight: 700;
    transition: background 0.2s ease-in-out;
    &:global(.current),
    &:hover {
      background: $colorPanelBack;
    }
    &:global(.current) {
      &:before {
        display: block;
        content: '';
        width: 0.8rem;
        height: 0.8rem;
        border-radius: 50%;
        background: #fff;
        position: absolute;
        left: 0;
        top: 50%;
        transform: translate3d(-50%, -50%, 0);
      }
    }
  }
  :global(h3.panelTitle) {
    width: 100%;
    text-align: center;
    font-size: 1.1rem;
    display: inline-block;
    width: 100%;
    padding: 0.6rem 1rem 0.4rem;
    background: lighten($colorPanelBack, 10%);
    margin: 0 0 0.4rem 0;
  }
  :global(.form-elem--infoField) {
    font-size: 1.2rem;
  }
  :global(.form-elem--infoField .label) {
    display: block;
    width: 100%;
    font-size: 0.8rem;
    font-weight: 700;
    color: darken(#fff, 50%);
    margin-top: -0.2rem;
    margin-bottom: -0.3rem;
    text-align: left;
  }
  :global(.form-elem--vector-input) {
    position: relative;
    > :global(.form-elem__label) {
      position: absolute;
      left: 0;
      top: -0.2rem;
      color: darken(#fff, 50%);
      font-size: 0.8rem;
      font-weight: 700;
    }
    :global(.form-elem__fields) {
      margin-top: 0.7rem;
      :global(.form-elem__label) {
        position: relative;
        width: 2.1rem;
        &:before {
          display: block;
          content: 'â€¢';
          font-size: 2rem;
          line-height: 1rem;
          position: absolute;
          left: 0;
          top: 0.3rem;
        }
      }
      :global(.form-elem:nth-child(1) .form-elem__label:before) {
        color: red;
      }
      :global(.form-elem:nth-child(2) .form-elem__label:before) {
        color: green;
      }
      :global(.form-elem:nth-child(3) .form-elem__label:before) {
        color: blue;
      }
      :global(.form-elem:nth-child(4) .form-elem__label:before) {
        color: #fff;
      }
      :global(.form-elem + .form-elem) {
        border-top: none;
        margin-top: 0;
      }
    }
    input {
      width: 18rem;
    }
  }
  :global(.collapsable-panel h4) {
    border-top: 0.5rem dotted lighten($colorPanelBack, 30%);
  }
  :global(.collapsable-panel .collapsable-panel) {
    border-bottom: 0.1rem solid lighten($colorPanelBack, 5%);
    border-top: 0.1rem solid lighten($colorPanelBack, 5%);
    margin-top: 0.2rem;
    padding-top: 0.4rem;
    h4 {
      background: #555;
      border-top: none;
    }
    :global(.collapsable-panel__content) {
      padding-left: 1rem;
      padding-right: 1rem;
      background: lighten($colorPanelBack, 2%);
    }
    :global(.form-elem__fields input) {
      width: 16.8rem;
    }
  }
}

.uiPanelRightInner {
  height: 100vh;
  overflow-y: auto;
}

.showPanel {
  transform: translate3d(0, 0, 0);
}

:global(.UIWorld.panelTogglerButton) {
  top: buttonPlacement(1);
}
:global(.UICamera.panelTogglerButton) {
  top: buttonPlacement(2);
}
